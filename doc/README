#PREPARE FOR TESTING
#===================
# Load Drivers 
cd /home/brandon/coding/A2818Drv/
sudo ./a2818_load
ls

#PREPARING ADC SPECTRUM
#======================
#SETUP: Anode Current -> Split to Ch 0-3 on V1729A
# !!!SIGNALS MUST NOT BE ON BOARD BEFORE THE PROGRAM SAYS TO ATTACH THEM!!!
# WD: /home/brandon/coding/vme_daq

# To Run program
cd /home/brandon/coding/vme_daq/
./bin/adc_spectrum [number of pulses to read] [desired trigger level in mV] [number of channels to read over]
e.g.:
./bin/adc_spectrum 5000 -350 4 

This reads one pulse over four channels. The other options for number of channels are 2 and 1. I recommend a trigger level of ~ -350 for 4 channels, ~-500 for 2, and ~-600 for 1. Also, 5000 pulses provides a good amount of statistics. 

If you are using 2 channels, you must use channels 0 and 1.
If you are using 1 channel, you must use channel 0.

#All the data is stored as a continuous ASCII text file. 
#To plot, use the following command.
python /home/brandon/coding/vme_daq/analysis/scripts/plot.py [number of channels used] [file_name1] [label_for_plot1] [file_name2] [label_for_plot2] etc

e.g.:
python plot.py 2 coated_pmt.dat coated_pmt bare_pmt.dat bare_pmt

Make sure all labels have underscores and not spaces, because they're also used to name the pulse files. The histograms are saved in "all_hist.pdf".


#Stick to plotting only one at a time for now. 

Be careful to move any files you make to either a different folder or different name because if you run the readout multiple times it will append to the same file.You can change bin number, the threshold for removing bad points, and bounds for which you integrate (labeled as "right_int_padding" and "left_int_padding" in the file.


#PLATEAU TESTING
#===============
#SETUP: Anode Current -> Ch 0 on V812 
#       "OR" on V812 -> Ch 0 INPUT on VX2718  
#
# WD: /home/brandon/coding/counting/
#
# Observe Anode current on Oscilloscope to determine a proper discriminator threshold.
# Can change threshold, output pulse width of discriminator, and the dead time of the
# discriminator in file "src/counting.C". Other parameters one can change are the
# style settings for ROOT, the num_voltages being tested, and the "num_repeats" for
# statistics. If anything is changed just do "make" in /home/brandon/coding/counting 
#
# You must ensure the LED isn't over-powered. If you see results that show counts as high 
# as 1023 for low voltages then the LED is too strong and needs its amplitude lowered. You 
# can somewhat eyeball this by looking at the LED on the "OR" from the Discriminator. 
#
# The scaler only has the capability to read up to 1023 counts. 
#
# Data is saved to "plateau.root"

# To Run program
cd /home/brandon/coding/counting
./bin/counting.exe

 Data is saved to "plateau.root"

# Press enter after adjusting the voltage level. I arbitrarily say 100V but we can 
# decide to change that. 


